// @provengo summon constraints

/**
 * In this file, we listen to events generated by the combi-based case detail generation 
 * system (in case-gen.js), and restrict the high-level business flow accordingly.
 */

// Start the high-level flow AFTER the combi has finished.
bthread("gen->states", function(){
    waitFor( rec.doneEvent );
    highLevelFlow.doStart();
});

// Enforce contact detail update when needed
bthread("Contact details router", function(){
    var updateContactDetails = waitFor(isContactDetailsUpdateRequired.anySetEvent)
    if ( updateContactDetails.data.value === Combi.YES ) {
        // Can't get to the main screen before visiting the update details screen
        sync({
            block:   highLevelFlow.enters("mainScreen"),
            waitFor: highLevelFlow.enters("updateContactDetails")
        });
        
    } else {
        // Must go to the main screen first
        sync({
            block:   highLevelFlow.enters("updateContactDetails"),
            waitFor: highLevelFlow.enters("mainScreen")
        });
    }
});

// Code below routes non-covered topics to the manual process page, and
// covered topics to the online claim process.
const excludedTopicsEventSet = bp.EventSet("excludedTopics", function(e){
    return claimTopic.anySetEvent.contains(e) &&
            ( excludedTopics.indexOf(e.data.value) > -1 );
});
const coveredTopicsEventSet = bp.EventSet("coveredTopics", function(e){
    return claimTopic.anySetEvent.contains(e) &&
            ( coveredTopics.indexOf(e.data.value) > -1 );
});

bthread("excludedTopicsRoutes", function(){
    interrupt(claimTopic.doneEvent, function(){
        waitFor(excludedTopicsEventSet);
        Constraints.block(highLevelFlow.enters("choosePlaintiffStage")).forever();
    });
});
bthread("coveredTopicsRouter", function(){
    interrupt(claimTopic.doneEvent, function(){
        waitFor(coveredTopicsEventSet);
        Constraints.block(highLevelFlow.enters("manualClaimProcess")).forever();
    });
});

